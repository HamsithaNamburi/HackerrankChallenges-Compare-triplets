using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace hackerrankchallenges
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("enter n value");
            int n = Convert.ToInt32(Console.ReadLine());
            List<int> a = new List<int>();
            List<int> b = new List<int>();
            Console.WriteLine("Enter alice values");
            for(int i = 0; i < n; i++)
            {
                a.Add(Convert.ToInt32(Console.ReadLine()));
            }
            for (int i = 0; i < n; i++)
            {
                b.Add(Convert.ToInt32(Console.ReadLine()));
            }
            List<int> points = new List<int>();
            int alice = 0;
            int bob = 0;
            for (int i = 0; i < a.Count; i++)
            {
                if (a[i] > b[i])
                {
                    alice++;
                }
                else
                if (a[i] < b[i])
                {
                    bob++;
                }

            }
            points.Add(alice);
            points.Add(bob);
            foreach(int i in points)
            {
                Console.WriteLine(i);
            }

        }
    }
}

*************************************hacker rank solution for Compare Triplets**********************************************
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the compareTriplets function below.
    static List<int> compareTriplets(List<int> a, List<int> b) {
        List<int> points=new List<int>();
        int alice=0;
        int bob=0;
        for(int i=0;i<a.Count;i++){
            if(a[i]>b[i]){
                alice++;
            }else
            if(a[i]<b[i]){
                bob++;
            }
            
        }
points.Add(alice);
points.Add(bob);
return points;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        List<int> a = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(aTemp => Convert.ToInt32(aTemp)).ToList();

        List<int> b = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(bTemp => Convert.ToInt32(bTemp)).ToList();

        List<int> result = compareTriplets(a, b);

        textWriter.WriteLine(String.Join(" ", result));

        textWriter.Flush();
        textWriter.Close();
    }
}

